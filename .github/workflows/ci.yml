name: CI

on:
  pull_request:
    branches: [main, develop]
    paths:
      - 'website/**'
      - '.github/workflows/ci.yml'
  push:
    branches: [develop]
    paths:
      - 'website/**'
      - '.github/workflows/ci.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./website

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: website/package-lock.json

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Run ESLint
        run: npm run lint

  build-check:
    name: Build Check
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./website

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: website/package-lock.json

      - name: Cache Vite build
        uses: actions/cache@v4
        with:
          path: |
            website/node_modules/.vite
            website/.vite-cache
          key: ${{ runner.os }}-vite-${{ hashFiles('website/package-lock.json') }}-${{ hashFiles('website/**/*.jsx', 'website/**/*.js', 'website/**/*.css') }}
          restore-keys: |
            ${{ runner.os }}-vite-${{ hashFiles('website/package-lock.json') }}-
            ${{ runner.os }}-vite-

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Build project
        run: npm run build
        env:
          # Use dummy values for build validation
          VITE_EMAILJS_SERVICE_ID: "test_service_id"
          VITE_EMAILJS_TEMPLATE_ID: "test_template_id"
          VITE_EMAILJS_PUBLIC_KEY: "test_public_key"

      - name: Check build output
        run: |
          if [ ! -d "dist" ]; then
            echo "Error: dist directory not found"
            exit 1
          fi
          if [ ! -f "dist/index.html" ]; then
            echo "Error: index.html not found in dist"
            exit 1
          fi
          echo "Build output looks good!"
